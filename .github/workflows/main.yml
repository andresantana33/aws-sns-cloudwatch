name: Deployment AWS Resources

on:
  push:
    branches:
      - main
      - baruk

env:
  WORKSPACE: prod
  AWS_REGION: us-east-1
  ROLE_TO_ASSUME: arn:aws:iam::826972386494:role/gitgub-actions-andresantana33
  TERRAFORM_VERSION: 1.7.5

permissions:
  id-token: write
  contents: read

jobs:
  setup:
    name: Setup Terraform and AWS
    runs-on: ubuntu-latest
    outputs:
      workspace: ${{ steps.set-workspace.outputs.workspace }}

    steps:
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}   

      - name: Set Terraform Workspace
        id: set-workspace
        run: |
          echo "workspace=${{ env.WORKSPACE }}" >> $GITHUB_ENV
          echo "workspace=${{ env.WORKSPACE }}" >> $GITHUB_OUTPUT      

  deploy:
    needs: setup
    name: Deploy AWS Modules (SNS and CloudWatch)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module:
          - sns
          - cloudwatch
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          role-session-name: terraform-${{ github.job }}-${{ github.run_id }}     
        
      - name: Terraform Init
        working-directory: ./modules/aws-${{ matrix.module }}
        run: terraform init

      - name: Select Terraform Workspace
        working-directory: ./modules/aws-${{ matrix.module }}
        run: terraform workspace select ${{ env.WORKSPACE }} || terraform workspace new ${{ env.WORKSPACE }}

      - name: Terraform Format Check
        working-directory: ./modules/aws-${{ matrix.module }}
        run: terraform fmt -check || (echo "Please run 'terraform fmt' to fix formatting issues." && exit 1)

      - name: Terraform Validate
        working-directory: ./modules/aws-${{ matrix.module }}
        run: terraform validate -no-color

      - name: Terraform Plan
        working-directory: ./modules/aws-${{ matrix.module }}
        run: terraform plan -var-file=tfvars/${{ matrix.module }}.tfvars -out=tfplan        
       
      - name: Terraform Apply
        if: github.ref == 'refs/heads/baruk'
        working-directory: ./modules/aws-${{ matrix.module }}
        run: terraform apply --auto-approve tfplan
